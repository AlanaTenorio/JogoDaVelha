/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import exceptions.JogoFinalizadoException;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;
import jogodavelha.JogoSingleplayer;
import jogodavelha.Tabuleiro;
import util.Coordenadas;

/**
 *
 * @author djeymisson
 */
public class TelaSingleplayer extends javax.swing.JFrame {
    Tabuleiro tabuleiro = new Tabuleiro();
    JogoSingleplayer jogo;
    int vencedor;
    
    /**
     * Creates new form TelaSingleplayer
     */
    public TelaSingleplayer() {
        initComponents();
        this.setLocationRelativeTo(null);
        jogo = tabuleiro.InicializarSingleplayer();
        vencedor = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTabuleiro = new javax.swing.JPanel();
        jB1 = new javax.swing.JButton();
        jB2 = new javax.swing.JButton();
        jB3 = new javax.swing.JButton();
        jB6 = new javax.swing.JButton();
        jB5 = new javax.swing.JButton();
        jB4 = new javax.swing.JButton();
        jB7 = new javax.swing.JButton();
        jB8 = new javax.swing.JButton();
        jB9 = new javax.swing.JButton();
        jogador1Panel = new javax.swing.JPanel();
        dogLabel1 = new javax.swing.JLabel();
        voceLabel1 = new javax.swing.JLabel();
        jogador2Panel = new javax.swing.JPanel();
        dog2Label = new javax.swing.JLabel();
        pcLabel = new javax.swing.JLabel();
        iniciarButton = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        sairButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jB1.setBackground(new java.awt.Color(255, 255, 255));
        jB1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB1.setEnabled(false);
        jB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB1ActionPerformed(evt);
            }
        });

        jB2.setBackground(new java.awt.Color(255, 255, 255));
        jB2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB2.setEnabled(false);
        jB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB2ActionPerformed(evt);
            }
        });

        jB3.setBackground(new java.awt.Color(255, 255, 255));
        jB3.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB3.setEnabled(false);
        jB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB3ActionPerformed(evt);
            }
        });

        jB6.setBackground(new java.awt.Color(255, 255, 255));
        jB6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB6.setEnabled(false);
        jB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB6ActionPerformed(evt);
            }
        });

        jB5.setBackground(new java.awt.Color(255, 255, 255));
        jB5.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB5.setEnabled(false);
        jB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB5ActionPerformed(evt);
            }
        });

        jB4.setBackground(new java.awt.Color(255, 255, 255));
        jB4.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB4.setEnabled(false);
        jB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB4ActionPerformed(evt);
            }
        });

        jB7.setBackground(new java.awt.Color(255, 255, 255));
        jB7.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB7.setEnabled(false);
        jB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB7ActionPerformed(evt);
            }
        });

        jB8.setBackground(new java.awt.Color(255, 255, 255));
        jB8.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB8.setEnabled(false);
        jB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB8ActionPerformed(evt);
            }
        });

        jB9.setBackground(new java.awt.Color(255, 255, 255));
        jB9.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB9.setEnabled(false);
        jB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTabuleiroLayout = new javax.swing.GroupLayout(panelTabuleiro);
        panelTabuleiro.setLayout(panelTabuleiroLayout);
        panelTabuleiroLayout.setHorizontalGroup(
            panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabuleiroLayout.createSequentialGroup()
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelTabuleiroLayout.createSequentialGroup()
                            .addComponent(jB4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jB5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jB6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelTabuleiroLayout.createSequentialGroup()
                            .addComponent(jB7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jB8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jB9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelTabuleiroLayout.createSequentialGroup()
                        .addComponent(jB1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelTabuleiroLayout.setVerticalGroup(
            panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabuleiroLayout.createSequentialGroup()
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jB1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jB5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTabuleiroLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jB4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jB8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jogador1Panel.setBackground(java.awt.Color.lightGray);
        jogador1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dogLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dogIcon.png"))); // NOI18N

        voceLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        voceLabel1.setText("Você: X");

        javax.swing.GroupLayout jogador1PanelLayout = new javax.swing.GroupLayout(jogador1Panel);
        jogador1Panel.setLayout(jogador1PanelLayout);
        jogador1PanelLayout.setHorizontalGroup(
            jogador1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dogLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(voceLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jogador1PanelLayout.setVerticalGroup(
            jogador1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dogLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jogador1PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(voceLabel1)
                .addGap(39, 39, 39))
        );

        jogador2Panel.setBackground(java.awt.Color.lightGray);
        jogador2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dog2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dogIco2.png"))); // NOI18N

        pcLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        pcLabel.setText("PC: O");

        javax.swing.GroupLayout jogador2PanelLayout = new javax.swing.GroupLayout(jogador2Panel);
        jogador2Panel.setLayout(jogador2PanelLayout);
        jogador2PanelLayout.setHorizontalGroup(
            jogador2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dog2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pcLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jogador2PanelLayout.setVerticalGroup(
            jogador2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dog2Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jogador2PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pcLabel)
                .addGap(41, 41, 41))
        );

        iniciarButton.setText("Iniciar Jogo");
        iniciarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarButtonActionPerformed(evt);
            }
        });

        menuButton.setText("Tela Inicial");
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });

        sairButton.setText("Sair");
        sairButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(panelTabuleiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jogador1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jogador2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iniciarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sairButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTabuleiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jogador1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jogador2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniciarButton)
                    .addComponent(menuButton)
                    .addComponent(sairButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB1ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB1.setText(texto);
                        jB1.setEnabled(false);
                        jogo.jogar(0, 0);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB1ActionPerformed

    private void jB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB2ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB2.setText(texto);
                        jB2.setEnabled(false);
                        jogo.jogar(0, 1);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB2ActionPerformed

    private void jB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB3ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB3.setText(texto);
                        jB3.setEnabled(false);
                        jogo.jogar(0, 2);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB3ActionPerformed

    private void jB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB6ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB6.setText(texto);
                        jB6.setEnabled(false);
                        jogo.jogar(1, 2);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB6ActionPerformed

    private void jB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB5ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB5.setText(texto);
                        jB5.setEnabled(false);
                        jogo.jogar(1, 1);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB5ActionPerformed

    private void jB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB4ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB4.setText(texto);
                        jB4.setEnabled(false);
                        jogo.jogar(1, 0);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB4ActionPerformed

    private void jB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB7ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB7.setText(texto);
                        jB7.setEnabled(false);
                        jogo.jogar(2, 0);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB7ActionPerformed

    private void jB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB8ActionPerformed
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB8.setText(texto);
                        jB8.setEnabled(false);
                        jogo.jogar(2, 1);                        
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jB8ActionPerformed

    private void jB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB9ActionPerformed
        
        mudarCor();
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto = "";
                if(!jogo.ganhou){
                    texto = jogo.escrever();
                    try {
                        jB9.setText(texto);
                        jB9.setEnabled(false);
                        jogo.jogar(2, 2);
                        desabilitaTabuleiro();
                        Thread.sleep(250);
                        jogadaPC();
                    } catch (JogoFinalizadoException ex) {
                        terminarJogo(jogo.getVencedor(), ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaSingleplayer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                return null;
            }
        };
        worker.execute();
        
    }//GEN-LAST:event_jB9ActionPerformed

    private void iniciarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarButtonActionPerformed
        habilitaTabuleiro();
        jogador1Panel.setBackground(Color.WHITE);
        iniciarButton.setEnabled(false);
    }//GEN-LAST:event_iniciarButtonActionPerformed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        new TelaInicial().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuButtonActionPerformed

    private void sairButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairButtonActionPerformed
        dispose();
    }//GEN-LAST:event_sairButtonActionPerformed
    
    private void mudarCor(){
        if (jogador1Panel.getBackground() == Color.WHITE){
            jogador1Panel.setBackground(Color.LIGHT_GRAY);
            jogador2Panel.setBackground(Color.WHITE);      
        } else {
            jogador2Panel.setBackground(Color.LIGHT_GRAY);
            jogador1Panel.setBackground(Color.WHITE); 
        }
    }
    
    private void habilitaTabuleiro(){
        if (jB1.getText().equals(""))
            jB1.setEnabled(true);
        if (jB2.getText().equals(""))
            jB2.setEnabled(true);
        if (jB3.getText().equals(""))
            jB3.setEnabled(true);
        if (jB4.getText().equals(""))
            jB4.setEnabled(true);
        if (jB5.getText().equals(""))
            jB5.setEnabled(true);
        if (jB6.getText().equals(""))
            jB6.setEnabled(true);
        if (jB7.getText().equals(""))
            jB7.setEnabled(true);
        if (jB8.getText().equals(""))
            jB8.setEnabled(true);
        if (jB9.getText().equals(""))
            jB9.setEnabled(true);
    }
   
    private void desabilitaTabuleiro(){
        jB1.setEnabled(false);
        jB4.setEnabled(false);
        jB7.setEnabled(false);
        jB2.setEnabled(false);
        jB5.setEnabled(false);
        jB8.setEnabled(false);
        jB3.setEnabled(false);
        jB6.setEnabled(false);
        jB9.setEnabled(false);
    }
    
    private void jogadaPC() throws JogoFinalizadoException{
        String texto = jogo.escrever();
        int pos = jogo.jogador2();
        if (pos != 0) {
            switch(pos){
                case 1:
                    jB1.setText(texto);
                    jB1.setEnabled(false);
                    break;
                case 2:
                    jB2.setText(texto);
                    jB2.setEnabled(false);
                    break;
                case 3:
                    jB3.setText(texto);
                    jB3.setEnabled(false);
                    break;
                case 4:
                    jB4.setText(texto);
                    jB4.setEnabled(false);
                    break;
                case 5:
                    jB5.setText(texto);
                    jB5.setEnabled(false);
                    break;
                case 6:
                    jB6.setText(texto);
                    jB6.setEnabled(false);
                    break;
                case 7:
                    jB7.setText(texto);
                    jB7.setEnabled(false);
                    break;
                case 8:
                    jB8.setText(texto);
                    jB8.setEnabled(false);
                    break;
                case 9:
                    jB9.setText(texto);
                    jB9.setEnabled(false);
                    break;
            }
        }
        mudarCor();
        habilitaTabuleiro();
    }
    
    private void terminarJogo(int vencedor, JogoFinalizadoException ex){
        /* Esse if é apenas pra que quando o pc ganhar, 
         * o último campo em que ele jogou seja mostrado.
         */
        if (ex.getPos() != 0){
            switch(ex.getPos()){
                case 1:
                    jB1.setText("O");
                    jB1.setEnabled(false);
                    break;
                case 2:
                    jB2.setText("O");
                    jB2.setEnabled(false);
                    break;
                case 3:
                    jB3.setText("O");
                    jB3.setEnabled(false);
                    break;
                case 4:
                    jB4.setText("O");
                    jB4.setEnabled(false);
                    break;
                case 5:
                    jB5.setText("O");
                    jB5.setEnabled(false);
                    break;
                case 6:
                    jB6.setText("O");
                    jB6.setEnabled(false);
                    break;
                case 7:
                    jB7.setText("O");
                    jB7.setEnabled(false);
                    break;
                case 8:
                    jB8.setText("O");
                    jB8.setEnabled(false);
                    break;
                case 9:
                    jB9.setText("O");
                    jB9.setEnabled(false);
                    break;
            }
        }
        desabilitaTabuleiro();
        if(vencedor == 0){
            new TelaEmpate().setVisible(true);
        } else {
            TelaVencedor janelaVencedor = new TelaVencedor();
            janelaVencedor.exibirVencedor(vencedor, "single");
            janelaVencedor.setVisible(true);
        }
        dispose();
    }  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaSingleplayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaSingleplayer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dog2Label;
    private javax.swing.JLabel dogLabel1;
    private javax.swing.JButton iniciarButton;
    private javax.swing.JButton jB1;
    private javax.swing.JButton jB2;
    private javax.swing.JButton jB3;
    private javax.swing.JButton jB4;
    private javax.swing.JButton jB5;
    private javax.swing.JButton jB6;
    private javax.swing.JButton jB7;
    private javax.swing.JButton jB8;
    private javax.swing.JButton jB9;
    private javax.swing.JPanel jogador1Panel;
    private javax.swing.JPanel jogador2Panel;
    private javax.swing.JButton jogarButton;
    private javax.swing.JButton jogarButton1;
    private javax.swing.JButton menuButton;
    private javax.swing.JPanel panelTabuleiro;
    private javax.swing.JLabel pcLabel;
    private javax.swing.JButton sairButton;
    private javax.swing.JLabel voceLabel1;
    // End of variables declaration//GEN-END:variables
}
