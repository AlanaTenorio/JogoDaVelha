/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools  Templates
 * and open the template in the editor.
 */
package GUI;

import exceptions.JogoFinalizadoException;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import jogodavelha.JogoMultiplayer;
import jogodavelha.Tabuleiro;
import util.Coordenadas;

/**
 *
 * @author Alana Ten√≥rio
 */
public class TelaMultiplayerCliente extends javax.swing.JFrame{
    Tabuleiro tabuleiro = new Tabuleiro();
    JogoMultiplayer jogo;
    int vencedor;
    
    Socket socketCliente;
    BufferedReader entradaServidor;
    DataOutputStream saidaServidor; 
    
    /**
     * Creates new form GUI
     * @throws java.io.IOException
     */
    public TelaMultiplayerCliente(){
        initComponents();
        this.setLocationRelativeTo(null);
        jogo = tabuleiro.InicializarMultiplayer();           
        vencedor = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTela = new javax.swing.JPanel();
        statusPanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        ipServidorPanel = new javax.swing.JPanel();
        ipServidorLabel = new javax.swing.JLabel();
        ipAField = new javax.swing.JTextField();
        ipBField = new javax.swing.JTextField();
        ipCField = new javax.swing.JTextField();
        ipDField = new javax.swing.JTextField();
        periodLabel = new javax.swing.JLabel();
        periodLabel1 = new javax.swing.JLabel();
        periodLabel2 = new javax.swing.JLabel();
        panelTabuleiro = new javax.swing.JPanel();
        jB1 = new javax.swing.JButton();
        jB2 = new javax.swing.JButton();
        jB3 = new javax.swing.JButton();
        jB6 = new javax.swing.JButton();
        jB5 = new javax.swing.JButton();
        jB4 = new javax.swing.JButton();
        jB7 = new javax.swing.JButton();
        jB8 = new javax.swing.JButton();
        jB9 = new javax.swing.JButton();
        iniciarButton = new javax.swing.JButton();
        sairButton = new javax.swing.JButton();
        menuButton1 = new javax.swing.JButton();
        jogador1Panel = new javax.swing.JPanel();
        dogLabel1 = new javax.swing.JLabel();
        voceLabel1 = new javax.swing.JLabel();
        jogador2Panel = new javax.swing.JPanel();
        dog2Label = new javax.swing.JLabel();
        pcLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        statusPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        statusLabel.setText("Digite o IP do servidor para iniciar");

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel)
        );

        ipServidorLabel.setText("IP do servidor:");

        ipAField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ipAField.setMaximumSize(new java.awt.Dimension(34, 27));
        ipAField.setMinimumSize(new java.awt.Dimension(34, 27));
        ipAField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ipAFieldFocusGained(evt);
            }
        });
        ipAField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ipAFieldKeyTyped(evt);
            }
        });

        ipBField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ipBField.setMaximumSize(new java.awt.Dimension(34, 27));
        ipBField.setMinimumSize(new java.awt.Dimension(34, 27));
        ipBField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ipBFieldFocusGained(evt);
            }
        });
        ipBField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ipBFieldKeyTyped(evt);
            }
        });

        ipCField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ipCField.setMaximumSize(new java.awt.Dimension(34, 27));
        ipCField.setMinimumSize(new java.awt.Dimension(34, 27));
        ipCField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ipCFieldFocusGained(evt);
            }
        });
        ipCField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ipCFieldKeyTyped(evt);
            }
        });

        ipDField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ipDField.setMaximumSize(new java.awt.Dimension(34, 27));
        ipDField.setMinimumSize(new java.awt.Dimension(34, 27));
        ipDField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ipDFieldFocusGained(evt);
            }
        });
        ipDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ipDFieldKeyTyped(evt);
            }
        });

        periodLabel.setText(".");

        periodLabel1.setText(".");

        periodLabel2.setText(".");

        javax.swing.GroupLayout ipServidorPanelLayout = new javax.swing.GroupLayout(ipServidorPanel);
        ipServidorPanel.setLayout(ipServidorPanelLayout);
        ipServidorPanelLayout.setHorizontalGroup(
            ipServidorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
            .addGroup(ipServidorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ipServidorPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ipServidorLabel)
                    .addGap(2, 2, 2)
                    .addComponent(ipAField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(1, 1, 1)
                    .addComponent(periodLabel)
                    .addGap(1, 1, 1)
                    .addComponent(ipBField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(1, 1, 1)
                    .addComponent(periodLabel1)
                    .addGap(1, 1, 1)
                    .addComponent(ipCField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(1, 1, 1)
                    .addComponent(periodLabel2)
                    .addGap(1, 1, 1)
                    .addComponent(ipDField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        ipServidorPanelLayout.setVerticalGroup(
            ipServidorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(ipServidorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ipServidorPanelLayout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addGroup(ipServidorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ipServidorLabel)
                        .addComponent(periodLabel)
                        .addComponent(ipAField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ipBField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(periodLabel1)
                        .addComponent(ipCField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(periodLabel2)
                        .addComponent(ipDField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jB1.setBackground(new java.awt.Color(255, 255, 255));
        jB1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB1.setEnabled(false);
        jB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB1ActionPerformed(evt);
            }
        });

        jB2.setBackground(new java.awt.Color(255, 255, 255));
        jB2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB2.setEnabled(false);
        jB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB2ActionPerformed(evt);
            }
        });

        jB3.setBackground(new java.awt.Color(255, 255, 255));
        jB3.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB3.setEnabled(false);
        jB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB3ActionPerformed(evt);
            }
        });

        jB6.setBackground(new java.awt.Color(255, 255, 255));
        jB6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB6.setEnabled(false);
        jB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB6ActionPerformed(evt);
            }
        });

        jB5.setBackground(new java.awt.Color(255, 255, 255));
        jB5.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB5.setEnabled(false);
        jB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB5ActionPerformed(evt);
            }
        });

        jB4.setBackground(new java.awt.Color(255, 255, 255));
        jB4.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB4.setEnabled(false);
        jB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB4ActionPerformed(evt);
            }
        });

        jB7.setBackground(new java.awt.Color(255, 255, 255));
        jB7.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB7.setEnabled(false);
        jB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB7ActionPerformed(evt);
            }
        });

        jB8.setBackground(new java.awt.Color(255, 255, 255));
        jB8.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB8.setEnabled(false);
        jB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB8ActionPerformed(evt);
            }
        });

        jB9.setBackground(new java.awt.Color(255, 255, 255));
        jB9.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jB9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jB9.setEnabled(false);
        jB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTabuleiroLayout = new javax.swing.GroupLayout(panelTabuleiro);
        panelTabuleiro.setLayout(panelTabuleiroLayout);
        panelTabuleiroLayout.setHorizontalGroup(
            panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabuleiroLayout.createSequentialGroup()
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelTabuleiroLayout.createSequentialGroup()
                            .addComponent(jB4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jB5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jB6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelTabuleiroLayout.createSequentialGroup()
                            .addComponent(jB7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jB8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jB9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelTabuleiroLayout.createSequentialGroup()
                        .addComponent(jB1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelTabuleiroLayout.setVerticalGroup(
            panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabuleiroLayout.createSequentialGroup()
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jB1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jB5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTabuleiroLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jB4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTabuleiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jB8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        iniciarButton.setText("Iniciar jogo");
        iniciarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarButtonActionPerformed(evt);
            }
        });

        sairButton.setText("Sair");
        sairButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairButtonActionPerformed(evt);
            }
        });

        menuButton1.setText("Tela Inicial");
        menuButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButton1ActionPerformed(evt);
            }
        });

        jogador1Panel.setBackground(java.awt.Color.lightGray);
        jogador1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dogLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dogIcon.png"))); // NOI18N

        voceLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        voceLabel1.setText("Servidor: X");

        javax.swing.GroupLayout jogador1PanelLayout = new javax.swing.GroupLayout(jogador1Panel);
        jogador1Panel.setLayout(jogador1PanelLayout);
        jogador1PanelLayout.setHorizontalGroup(
            jogador1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador1PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dogLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(voceLabel1)
                .addContainerGap())
        );
        jogador1PanelLayout.setVerticalGroup(
            jogador1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dogLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jogador1PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(voceLabel1)
                .addGap(40, 40, 40))
        );

        jogador2Panel.setBackground(java.awt.Color.lightGray);
        jogador2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dog2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dogIco2.png"))); // NOI18N

        pcLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        pcLabel.setText("Voc√™: O");

        javax.swing.GroupLayout jogador2PanelLayout = new javax.swing.GroupLayout(jogador2Panel);
        jogador2Panel.setLayout(jogador2PanelLayout);
        jogador2PanelLayout.setHorizontalGroup(
            jogador2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dog2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pcLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jogador2PanelLayout.setVerticalGroup(
            jogador2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jogador2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dog2Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jogador2PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pcLabel)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout panelTelaLayout = new javax.swing.GroupLayout(panelTela);
        panelTela.setLayout(panelTelaLayout);
        panelTelaLayout.setHorizontalGroup(
            panelTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(panelTelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTabuleiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jogador1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jogador2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelTelaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTelaLayout.createSequentialGroup()
                        .addComponent(menuButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iniciarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sairButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTelaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ipServidorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addGap(92, 92, 92))
        );
        panelTelaLayout.setVerticalGroup(
            panelTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTabuleiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTelaLayout.createSequentialGroup()
                        .addComponent(jogador1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jogador2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(ipServidorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniciarButton)
                    .addComponent(sairButton)
                    .addComponent(menuButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTela, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ipDFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipDFieldKeyTyped
        if(ipDField.getText().length()>=3)
        evt.consume();
    }//GEN-LAST:event_ipDFieldKeyTyped

    private void ipDFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ipDFieldFocusGained
        ipDField.setText("");
    }//GEN-LAST:event_ipDFieldFocusGained

    private void ipCFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipCFieldKeyTyped
        if(ipCField.getText().length()>=2)
        //evt.consume();
            ipDField.grabFocus();
    }//GEN-LAST:event_ipCFieldKeyTyped

    private void ipCFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ipCFieldFocusGained
        ipCField.setText("");
    }//GEN-LAST:event_ipCFieldFocusGained

    private void ipBFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipBFieldKeyTyped
        if(ipBField.getText().length()>=2)
        //evt.consume();
        ipCField.grabFocus();
    }//GEN-LAST:event_ipBFieldKeyTyped

    private void ipBFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ipBFieldFocusGained
        ipBField.setText("");
    }//GEN-LAST:event_ipBFieldFocusGained

    private void ipAFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipAFieldKeyTyped
        if(ipAField.getText().length()>=2)
        //evt.consume();
            ipBField.grabFocus();
    }//GEN-LAST:event_ipAFieldKeyTyped

    private void ipAFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ipAFieldFocusGained
        ipAField.setText("");
    }//GEN-LAST:event_ipAFieldFocusGained

    private void iniciarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarButtonActionPerformed
        
        if (ipValido()){
            
            ipAField.setEnabled(false);
            ipBField.setEnabled(false);
            ipCField.setEnabled(false);
            ipDField.setEnabled(false);
            
            final String ipHost = ipAField.getText() + "." +ipBField.getText() + "." +ipCField.getText() + "." + ipDField.getText();
            statusLabel.setText("Conectando com servidor...");

            SwingWorker worker = new SwingWorker() {
                @Override
                protected Object doInBackground() throws Exception {
                    socketCliente = new Socket(ipHost, 6666);
                    statusLabel.setText("Servidor conectado!");
                    Thread.sleep(1000);
                    entradaServidor = new BufferedReader(new InputStreamReader(socketCliente.getInputStream()));
                    saidaServidor = new DataOutputStream(socketCliente.getOutputStream());
                    statusLabel.setText("Servidor come√ßa...");
                    Thread.sleep(1000);
                    esperaVez();
                    return null;
                }
            };

            worker.execute();
            iniciarButton.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, digite um IP v√°lido.", "IP de servidor inv√°lido", 0);
        }
        
        
        
    }//GEN-LAST:event_iniciarButtonActionPerformed

    private void jB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB9ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("9"+"\n");
                jogo.jogar(2, 2);
                jB9.setText(texto);
                jB9.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB9ActionPerformed

    private void jB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB8ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                jogo.jogar(2, 1);
                jB8.setText(texto);
                jB8.setEnabled(false);
                saidaServidor.writeBytes("8"+"\n");
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB8ActionPerformed

    private void jB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB7ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("7"+"\n");
                jogo.jogar(2, 0);
                jB7.setText(texto);
                jB7.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB7ActionPerformed

    private void jB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB4ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("4"+"\n");
                jogo.jogar(1, 0);
                jB4.setText(texto);
                jB4.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB4ActionPerformed

    private void jB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB5ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("5"+"\n");
                jogo.jogar(1, 1);
                jB5.setText(texto);
                jB5.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB5ActionPerformed

    private void jB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB6ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("6"+"\n");
                jogo.jogar(1, 2);
                jB6.setText(texto);
                jB6.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB6ActionPerformed

    private void jB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB3ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("3"+"\n");                
                jogo.jogar(0, 2);
                jB3.setText(texto);
                jB3.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB3ActionPerformed

    private void jB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB2ActionPerformed
        String texto = "";
        if(!jogo.ganhou){
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("2"+"\n");
                jogo.jogar(0, 1);
                jB2.setText(texto);
                jB2.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB2ActionPerformed

    private void jB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB1ActionPerformed
        String texto = "";
        if(!jogo.ganhou) {
            texto = jogo.escrever();
            try {
                saidaServidor.writeBytes("1"+"\n");
                jogo.jogar(0, 0);
                jB1.setText(texto);
                jB1.setEnabled(false);
                esperaVez();
            } catch (JogoFinalizadoException ex) {
                terminarJogo(jogo.getVencedor());
            } catch (IOException ex) {
                Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB1ActionPerformed

    private void sairButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairButtonActionPerformed
        dispose();
    }//GEN-LAST:event_sairButtonActionPerformed

    private void menuButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButton1ActionPerformed
        new TelaInicial().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuButton1ActionPerformed
    
    private void desabilitaTabuleiro(){
        jB1.setEnabled(false);
        jB4.setEnabled(false);
        jB7.setEnabled(false);
        jB2.setEnabled(false);
        jB5.setEnabled(false);
        jB8.setEnabled(false);
        jB3.setEnabled(false);
        jB6.setEnabled(false);
        jB9.setEnabled(false);
    }
    
    private void habilitaTabuleiro(){
        if (jB1.getText().equals(""))
            jB1.setEnabled(true);
        if (jB2.getText().equals(""))
            jB2.setEnabled(true);
        if (jB3.getText().equals(""))
            jB3.setEnabled(true);
        if (jB4.getText().equals(""))
            jB4.setEnabled(true);
        if (jB5.getText().equals(""))
            jB5.setEnabled(true);
        if (jB6.getText().equals(""))
            jB6.setEnabled(true);
        if (jB7.getText().equals(""))
            jB7.setEnabled(true);
        if (jB8.getText().equals(""))
            jB8.setEnabled(true);
        if (jB9.getText().equals(""))
            jB9.setEnabled(true);
    }
    
    private void terminarJogo(int vencedor){
        desabilitaTabuleiro();
        if(vencedor == 0){
            TelaEmpate telaEmpate = new TelaEmpate();
            telaEmpate.setVisible(true);
        } else {
            TelaVencedor janelaVencedor = new TelaVencedor();
            janelaVencedor.exibirVencedor(vencedor, "multi");
            janelaVencedor.setVisible(true);
        }
        dispose();
    }  
    
    private void esperaVez() throws IOException{
        
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                String texto, stringServidor;
                mudarCor();                
                desabilitaTabuleiro();
                statusLabel.setText("Esperando jogada do servidor...");
                stringServidor = entradaServidor.readLine();
                if (stringServidor != null){
                    int pos = Integer.parseInt(stringServidor);
                    if(!jogo.ganhou) {
                        texto = jogo.escrever();
                        try {
                            jogo.jogar(Coordenadas.getX(pos), Coordenadas.getY(pos));
                            jogadaServidor(pos, texto);
                        } catch (JogoFinalizadoException ex) {
                            terminarJogo(jogo.getVencedor());
                        }
                    }
                    statusLabel.setText("Sua vez de jogar...");
                    habilitaTabuleiro();
                    mudarCor();
                } else {
                    terminarJogo(jogo.getVencedor());
                }
                return null;
            }
        };
        
        worker.execute();
    }
    
    private void jogadaServidor(int pos, String texto){
        switch(pos){
            case 1:
                jB1.setText(texto);
                jB1.setEnabled(false);
                return;
            case 2:
                jB2.setText(texto);
                jB2.setEnabled(false);
                return;
            case 3:
                jB3.setText(texto);
                jB3.setEnabled(false);
                return;
            case 4:
                jB4.setText(texto);
                jB4.setEnabled(false);
                return;
            case 5:
                jB5.setText(texto);
                jB5.setEnabled(false);
                return;
            case 6:
                jB6.setText(texto);
                jB6.setEnabled(false);
                return;
            case 7:
                jB7.setText(texto);
                jB7.setEnabled(false);
                return;
            case 8:
                jB8.setText(texto);
                jB8.setEnabled(false);
                return;
            case 9:
                jB9.setText(texto);
                jB9.setEnabled(false);
                return;
        }
    }
    
    private void mudarCor(){
        if (jogador1Panel.getBackground() == Color.WHITE){
            jogador1Panel.setBackground(Color.LIGHT_GRAY);
            jogador2Panel.setBackground(Color.WHITE);      
        } else {
            jogador2Panel.setBackground(Color.LIGHT_GRAY);
            jogador1Panel.setBackground(Color.WHITE); 
        }
    }

    private boolean ipValido(){
        boolean resul = true;
        int ipA, ipB, ipC, ipD;
        
        try {
            ipA = Integer.parseInt(ipAField.getText());
            ipB = Integer.parseInt(ipBField.getText());
            ipC = Integer.parseInt(ipCField.getText());
            ipD = Integer.parseInt(ipDField.getText());

            if (ipA < 0 || ipA > 255 || ipB < 0 || ipB > 255 || ipC < 0 || ipC > 255 || ipD < 0 || ipD > 255)
                resul = false;
        } catch (NumberFormatException ex){
            resul = false;
        }
        
        return resul;
    }
    
    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws IOException{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMultiplayerCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMultiplayerCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dog2Label;
    private javax.swing.JLabel dogLabel1;
    private javax.swing.JButton iniciarButton;
    private javax.swing.JTextField ipAField;
    private javax.swing.JTextField ipBField;
    private javax.swing.JTextField ipCField;
    private javax.swing.JTextField ipDField;
    private javax.swing.JLabel ipServidorLabel;
    private javax.swing.JPanel ipServidorPanel;
    private javax.swing.JButton jB1;
    private javax.swing.JButton jB2;
    private javax.swing.JButton jB3;
    private javax.swing.JButton jB4;
    private javax.swing.JButton jB5;
    private javax.swing.JButton jB6;
    private javax.swing.JButton jB7;
    private javax.swing.JButton jB8;
    private javax.swing.JButton jB9;
    private javax.swing.JPanel jogador1Panel;
    private javax.swing.JPanel jogador2Panel;
    private javax.swing.JButton menuButton1;
    private javax.swing.JPanel panelTabuleiro;
    private javax.swing.JPanel panelTela;
    private javax.swing.JLabel pcLabel;
    private javax.swing.JLabel periodLabel;
    private javax.swing.JLabel periodLabel1;
    private javax.swing.JLabel periodLabel2;
    private javax.swing.JButton sairButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel voceLabel1;
    // End of variables declaration//GEN-END:variables
}
